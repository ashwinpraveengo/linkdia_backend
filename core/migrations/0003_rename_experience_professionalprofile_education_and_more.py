# Generated by Django 5.2.4 on 2025-08-06 18:39

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_customuser_user_type_clientprofile_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='professionalprofile',
            old_name='experience',
            new_name='education',
        ),
        migrations.RenameField(
            model_name='professionalprofile',
            old_name='skills',
            new_name='verification_notes',
        ),
        migrations.RemoveField(
            model_name='professionalprofile',
            name='bio',
        ),
        migrations.RemoveField(
            model_name='professionalprofile',
            name='hourly_rate',
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='area_of_expertise',
            field=models.CharField(blank=True, choices=[('CRIMINAL_LAWYER', 'Criminal Lawyer'), ('CORPORATE_LAWYER', 'Corporate Lawyer'), ('FAMILY_LAWYER', 'Family Lawyer'), ('REAL_ESTATE_LAWYER', 'Real Estate Lawyer'), ('IMMIGRATION_LAWYER', 'Immigration Lawyer'), ('PERSONAL_INJURY_LAWYER', 'Personal Injury Lawyer'), ('INTELLECTUAL_PROPERTY_LAWYER', 'Intellectual Property Lawyer'), ('TAX_LAWYER', 'Tax Lawyer'), ('EMPLOYMENT_LAWYER', 'Employment Lawyer'), ('ENVIRONMENTAL_LAWYER', 'Environmental Lawyer'), ('OTHER', 'Other')], max_length=50),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='average_rating',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='bar_registration_number',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='bio_introduction',
            field=models.TextField(blank=True, help_text='Add a few interesting things about yourself', max_length=500),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='languages',
            field=models.CharField(blank=True, max_length=300),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='onboarding_completed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='onboarding_step',
            field=models.CharField(choices=[('PROFILE_SETUP', 'Profile Setup'), ('DOCUMENT_UPLOAD', 'Document Upload'), ('VIDEO_KYC', 'Video KYC'), ('PORTFOLIO', 'Portfolio & Case Studies'), ('CONSULTATION_HOURS', 'Consultation Hours'), ('PAYMENT_SETUP', 'Payment Setup'), ('COMPLETED', 'Completed')], default='PROFILE_SETUP', max_length=20),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='professional_license_number',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='profile_picture',
            field=models.ImageField(blank=True, null=True, upload_to='profile_pictures/'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='specialization',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='timezone',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='total_consultations',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='total_reviews',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='verification_status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('IN_REVIEW', 'In Review'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='verified_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='years_of_experience',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)]),
        ),
        migrations.AlterField(
            model_name='professionalprofile',
            name='location',
            field=models.CharField(blank=True, help_text='Specify your current location', max_length=100),
        ),
        migrations.CreateModel(
            name='ConsultationAvailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('monday', models.BooleanField(default=False)),
                ('tuesday', models.BooleanField(default=False)),
                ('wednesday', models.BooleanField(default=False)),
                ('thursday', models.BooleanField(default=False)),
                ('friday', models.BooleanField(default=False)),
                ('saturday', models.BooleanField(default=False)),
                ('sunday', models.BooleanField(default=False)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('consultation_type', models.CharField(choices=[('ONLINE', 'Online'), ('OFFLINE', 'Offline'), ('BOTH', 'Both')], default='BOTH', max_length=10)),
                ('default_duration_minutes', models.IntegerField(choices=[(30, '30 minutes'), (60, '1 hour'), (90, '1.5 hours'), (120, '2 hours'), (180, '3 hours')], default=60)),
                ('outlook_calendar_sync', models.BooleanField(default=False)),
                ('google_calendar_sync', models.BooleanField(default=False)),
                ('outlook_calendar_id', models.CharField(blank=True, max_length=255)),
                ('google_calendar_id', models.CharField(blank=True, max_length=255)),
                ('hourly_rate', models.DecimalField(decimal_places=2, default=100.0, max_digits=10)),
                ('buffer_time_minutes', models.IntegerField(default=15)),
                ('max_sessions_per_day', models.IntegerField(blank=True, null=True)),
                ('advance_booking_days', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='core.professionalprofile')),
            ],
            options={
                'db_table': 'consultation_availability',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationBooking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consultation_date', models.DateTimeField()),
                ('duration_minutes', models.IntegerField()),
                ('consultation_type', models.CharField(choices=[('ONLINE', 'Online'), ('OFFLINE', 'Offline')], max_length=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Confirmation'), ('CONFIRMED', 'Confirmed'), ('CANCELLED_BY_CLIENT', 'Cancelled by Client'), ('CANCELLED_BY_PROFESSIONAL', 'Cancelled by Professional'), ('COMPLETED', 'Completed'), ('NO_SHOW', 'No Show'), ('RESCHEDULED', 'Rescheduled')], default='PENDING', max_length=30)),
                ('meeting_link', models.URLField(blank=True)),
                ('meeting_id', models.CharField(blank=True, max_length=100)),
                ('meeting_password', models.CharField(blank=True, max_length=50)),
                ('location_address', models.TextField(blank=True)),
                ('location_notes', models.TextField(blank=True)),
                ('client_notes', models.TextField(blank=True, help_text='Special requirements or notes from client')),
                ('case_description', models.TextField(help_text='Brief description of the legal matter')),
                ('urgency_level', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('final_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded'), ('PARTIAL_REFUND', 'Partial Refund')], default='PENDING', max_length=20)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('cancellation_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('professional_notes', models.TextField(blank=True, help_text="Professional's notes after consultation")),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_notes', models.TextField(blank=True)),
                ('reminder_sent_24h', models.BooleanField(default=False)),
                ('reminder_sent_1h', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings_as_client', to=settings.AUTH_USER_MODEL)),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_bookings', to=settings.AUTH_USER_MODEL)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='core.professionalprofile')),
            ],
            options={
                'db_table': 'consultation_bookings',
                'ordering': ['-consultation_date'],
            },
        ),
        migrations.CreateModel(
            name='BookingHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('CREATED', 'Booking Created'), ('CONFIRMED', 'Booking Confirmed'), ('CANCELLED', 'Booking Cancelled'), ('RESCHEDULED', 'Booking Rescheduled'), ('COMPLETED', 'Booking Completed'), ('PAYMENT_MADE', 'Payment Made'), ('PAYMENT_FAILED', 'Payment Failed'), ('REFUND_PROCESSED', 'Refund Processed'), ('REMINDER_SENT', 'Reminder Sent'), ('NOTE_ADDED', 'Note Added')], max_length=20)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_booking_actions', to=settings.AUTH_USER_MODEL)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='core.consultationbooking')),
            ],
            options={
                'db_table': 'booking_history',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('review_text', models.TextField()),
                ('communication_rating', models.IntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('expertise_rating', models.IntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('professionalism_rating', models.IntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('value_for_money_rating', models.IntegerField(blank=True, choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], null=True)),
                ('is_published', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('would_recommend', models.BooleanField(default=True)),
                ('tags', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='core.consultationbooking')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_reviews', to=settings.AUTH_USER_MODEL)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to='core.professionalprofile')),
            ],
            options={
                'db_table': 'consultation_reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationSlot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('BOOKED', 'Booked'), ('BLOCKED', 'Blocked'), ('TEMPORARY_HOLD', 'Temporary Hold')], default='AVAILABLE', max_length=15)),
                ('held_until', models.DateTimeField(blank=True, null=True)),
                ('custom_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='time_slot', to='core.consultationbooking')),
                ('held_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='held_slots', to=settings.AUTH_USER_MODEL)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='core.professionalprofile')),
            ],
            options={
                'db_table': 'consultation_slots',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('template_type', models.CharField(choices=[('BOOKING_CONFIRMATION', 'Booking Confirmation'), ('BOOKING_REMINDER', 'Booking Reminder'), ('BOOKING_CANCELLATION', 'Booking Cancellation'), ('BOOKING_RESCHEDULED', 'Booking Rescheduled'), ('PAYMENT_CONFIRMATION', 'Payment Confirmation'), ('REVIEW_REQUEST', 'Review Request'), ('WELCOME_CLIENT', 'Welcome Client'), ('WELCOME_PROFESSIONAL', 'Welcome Professional')], max_length=30)),
                ('channel', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('IN_APP', 'In-App Notification')], max_length=10)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('available_variables', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notification_templates',
                'unique_together': {('template_type', 'channel')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('READ', 'Read'), ('FAILED', 'Failed')], default='PENDING', max_length=10)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='core.consultationbooking')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to='core.notificationtemplate')),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OnboardingProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_setup_completed', models.BooleanField(default=False)),
                ('profile_setup_completed_at', models.DateTimeField(blank=True, null=True)),
                ('profile_completion_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('documents_uploaded', models.BooleanField(default=False)),
                ('documents_uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('documents_verified', models.BooleanField(default=False)),
                ('documents_verified_at', models.DateTimeField(blank=True, null=True)),
                ('total_documents_uploaded', models.IntegerField(default=0)),
                ('minimum_documents_required', models.IntegerField(default=2)),
                ('video_kyc_scheduled', models.BooleanField(default=False)),
                ('video_kyc_scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('video_kyc_completed', models.BooleanField(default=False)),
                ('video_kyc_completed_at', models.DateTimeField(blank=True, null=True)),
                ('video_kyc_verified', models.BooleanField(default=False)),
                ('video_kyc_verified_at', models.DateTimeField(blank=True, null=True)),
                ('portfolio_added', models.BooleanField(default=False)),
                ('portfolio_added_at', models.DateTimeField(blank=True, null=True)),
                ('portfolio_documents_uploaded', models.BooleanField(default=False)),
                ('portfolio_documents_uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('availability_set', models.BooleanField(default=False)),
                ('availability_set_at', models.DateTimeField(blank=True, null=True)),
                ('calendar_synced', models.BooleanField(default=False)),
                ('calendar_synced_at', models.DateTimeField(blank=True, null=True)),
                ('payment_method_added', models.BooleanField(default=False)),
                ('payment_method_added_at', models.DateTimeField(blank=True, null=True)),
                ('payment_verified', models.BooleanField(default=False)),
                ('payment_verified_at', models.DateTimeField(blank=True, null=True)),
                ('onboarding_completed', models.BooleanField(default=False)),
                ('onboarding_completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('professional', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_progress', to='core.professionalprofile')),
            ],
            options={
                'db_table': 'onboarding_progress',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_type', models.CharField(choices=[('BANK_ACCOUNT', 'Bank Account'), ('DIGITAL_WALLET', 'Digital Wallet')], max_length=15)),
                ('account_holder_name', models.CharField(blank=True, max_length=100)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('account_number', models.CharField(blank=True, max_length=50)),
                ('ifsc_code', models.CharField(blank=True, max_length=15)),
                ('routing_number', models.CharField(blank=True, max_length=20)),
                ('swift_code', models.CharField(blank=True, max_length=15)),
                ('wallet_provider', models.CharField(blank=True, choices=[('PAYTM', 'Paytm'), ('GOOGLE_PAY', 'Google Pay'), ('PHONEPE', 'PhonePe'), ('PAYPAL', 'PayPal'), ('RAZORPAY', 'Razorpay'), ('STRIPE', 'Stripe')], max_length=15)),
                ('wallet_phone_number', models.CharField(blank=True, max_length=15)),
                ('wallet_email', models.EmailField(blank=True, max_length=254)),
                ('wallet_account_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Verification'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected'), ('SUSPENDED', 'Suspended')], default='PENDING', max_length=15)),
                ('verification_notes', models.TextField(blank=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('minimum_payout_amount', models.DecimalField(decimal_places=2, default=100.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='core.professionalprofile')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'professional_payment_methods',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('case_overview', models.TextField(blank=True)),
                ('organization_name', models.CharField(blank=True, max_length=200)),
                ('organization_type', models.CharField(blank=True, choices=[('LAW_FIRM', 'Law Firm'), ('SOLO_PRACTICE', 'Solo Practice'), ('CORPORATE_LEGAL', 'Corporate Legal Department'), ('NGO', 'Non-Profit Organization'), ('GOVERNMENT', 'Government Agency'), ('OTHER', 'Other')], max_length=50)),
                ('practice_area', models.CharField(blank=True, max_length=100)),
                ('case_type', models.CharField(blank=True, max_length=100)),
                ('client_industry', models.CharField(blank=True, max_length=100)),
                ('case_duration', models.CharField(blank=True, max_length=100)),
                ('case_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('outcome', models.TextField(blank=True)),
                ('awards_recognition', models.TextField(blank=True)),
                ('certifications', models.TextField(blank=True)),
                ('notable_mentions', models.TextField(blank=True)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='portfolio_images/')),
                ('portfolio_document', models.FileField(blank=True, null=True, upload_to='portfolio_documents/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx'])])),
                ('is_featured', models.BooleanField(default=False)),
                ('is_confidential', models.BooleanField(default=False)),
                ('display_order', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to='core.professionalprofile')),
            ],
            options={
                'db_table': 'professional_portfolios',
                'ordering': ['display_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='portfolio_images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('display_order', models.IntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.portfolio')),
            ],
            options={
                'db_table': 'portfolio_images',
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='ProfessionalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('auto_accept_bookings', models.BooleanField(default=False)),
                ('require_advance_payment', models.BooleanField(default=True)),
                ('cancellation_hours', models.IntegerField(default=24)),
                ('show_phone_number', models.BooleanField(default=False)),
                ('show_email', models.BooleanField(default=False)),
                ('public_profile', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('professional', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='core.professionalprofile')),
            ],
            options={
                'db_table': 'professional_settings',
            },
        ),
        migrations.CreateModel(
            name='VideoKYC',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('NOT_STARTED', 'Not Started'), ('READY_TO_START', 'Ready to Start'), ('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('RESCHEDULED', 'Rescheduled')], default='NOT_STARTED', max_length=15)),
                ('verification_status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('camera_instruction_acknowledged', models.BooleanField(default=False)),
                ('id_ready_acknowledged', models.BooleanField(default=False)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('meeting_url', models.URLField(blank=True)),
                ('recording_url', models.URLField(blank=True)),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('identity_confirmed', models.BooleanField(default=False)),
                ('face_match_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('document_verification_passed', models.BooleanField(default=False)),
                ('reschedule_reason', models.TextField(blank=True)),
                ('reschedule_count', models.IntegerField(default=0)),
                ('max_reschedules', models.IntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_kyc_sessions', to='core.professionalprofile')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kyc_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'video_kyc_sessions',
                'ordering': ['-scheduled_at'],
            },
        ),
        migrations.CreateModel(
            name='ProfessionalDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('GOVERNMENT_ID', 'Government ID'), ('PASSPORT', 'Passport'), ('DRIVING_LICENSE', 'Driving License'), ('PROFESSIONAL_LICENSE', 'Professional License/Bar Certificate'), ('DEGREE_CERTIFICATE', 'Law Degree Certificate'), ('EXPERIENCE_CERTIFICATE', 'Experience Certificate'), ('PRACTICE_CERTIFICATE', 'Practice Certificate'), ('REGISTRATION_CERTIFICATE', 'Bar Registration Certificate'), ('OTHER', 'Other')], max_length=30)),
                ('document_file', models.FileField(upload_to='professional_documents/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png', 'doc', 'docx'])])),
                ('document_number', models.CharField(blank=True, max_length=100)),
                ('issued_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('issuing_authority', models.CharField(blank=True, max_length=200)),
                ('verification_status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('verification_notes', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('original_filename', models.CharField(blank=True, max_length=255)),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='core.professionalprofile')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'professional_documents',
                'unique_together': {('professional', 'document_type')},
            },
        ),
    ]
